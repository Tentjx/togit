package com.example.mp3player;

import java.io.IOException;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.net.Uri;
import android.os.Handler;
import android.os.IBinder;
import android.widget.Toast;

public class PlayMusicService extends Service {
static MediaPlayer mediaPlayer;
public static   boolean isPause;

	@Override
	public IBinder onBind(Intent arg0) {
				return null;
	}
   @Override
public void onCreate() {
	// TODO Auto-generated method stub
	super.onCreate();
	 mediaPlayer=new MediaPlayer();
	 MusicControlBroadReceiver musicControlBroadReceiver=new MusicControlBroadReceiver();
	 IntentFilter intentFilter=new IntentFilter();
	 intentFilter.addAction("com.waterworld.action.PLAYMUSICBROAD");
	 registerReceiver(musicControlBroadReceiver, intentFilter);
	 
	 mediaPlayer.setOnCompletionListener(new OnCompletionListener() {
		
		@Override
		public void onCompletion(MediaPlayer arg0) {
			// TODO Auto-generated method stub
			if (PlayActivity.temp==0) {
				PlayActivity.animation.cancel();
				Intent intentCompletionBroad=new Intent();
				intentCompletionBroad.setAction("com.waterworld.action.COMPLETIONBROAD");
				intentCompletionBroad.putExtra("completion", "completed");
				sendBroadcast(intentCompletionBroad);
			}	

		}
	});
}
   
   Handler sekbarHandler=new Handler();
   Runnable updateSeekbar= new Runnable() {
	   
	public void run() {
		PlayActivity.progressSekbar.setProgress(mediaPlayer.getCurrentPosition());
		PlayActivity.currentTime.setText(""+mediaPlayer.getCurrentPosition());
		sekbarHandler.postDelayed(updateSeekbar, 100);
	}
};
   class MusicControlBroadReceiver extends BroadcastReceiver{

	@Override
	public void onReceive(Context context, Intent intent) {
		int broadMessage=intent.getIntExtra("broadMessage", 0);
		String musicPath=intent.getStringExtra("musicPath");
		Uri musicUri = Uri.parse(musicPath);

		if (broadMessage==1) {
			if (isPause) {
				mediaPlayer.start();
			} else {
               try {
				mediaPlayer.reset();
				   mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
				   mediaPlayer
					.setDataSource(getApplicationContext(), musicUri);
				   mediaPlayer.prepareAsync();
				   mediaPlayer.setOnPreparedListener(new OnPreparedListener() {
					
					@Override
					public void onPrepared(MediaPlayer arg0) {
						// TODO Auto-generated method stub
						mediaPlayer.start();
						sekbarHandler.post(updateSeekbar);
					}
				});
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			} catch (SecurityException e) {
				e.printStackTrace();
			} catch (IllegalStateException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}

			}
			isPause=false;
		} else if (broadMessage==2) {
			if (mediaPlayer.isPlaying()) {
				mediaPlayer.pause();
			}
			isPause=true;
		}else if (broadMessage==5) {
			if(isPause||mediaPlayer.isPlaying()){
				mediaPlayer.stop();
				
			}
			isPause=false;

		}
	}
	   
   }
}
